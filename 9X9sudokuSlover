import java.util.ArrayList;

class FirstClass {
    // Used to check i can place my queen or not
    public static boolean isSafe(char board[][], int row, int col, int num) {
        // chk horixontal, vertically
        for (int i = 0; i < board.length; i++) {
            if (board[row][i] ==(char) (num+'0')) {
                return false;
            }
            if (board[i][col] ==(char) (num+'0')) {
                return false;
            }
        }
        // to chk in the mini grid
        int srow = (row / 3) * 3;
        int scol = (col / 3) * 3;
        for (int i = srow; i < srow + 3; i++) {
            for (int j = scol; j < scol + 3; j++) {
                if (board[i][j] == (char) (num+'0')) {
                    return false;
                }
            }
        }

        return true;
    }

    public static void sloveSudoku(char board[][], int row, int col) {
        // if all row ,col filled print
        if (col == board.length-1 && row==board.length) {
            System.out.println("-------------");
            for (int i = 0; i < board.length; i++) {
                for (int j = 0; j < board.length; j++) {
                    System.out.print((char)board[i][j] + "| ");
                }
                System.out.println();
            }
            return;
        } else if (row == board.length) { // else move to next col
            row = 0;
            col++;
        }

        if (board[row][col] != '.') { // checks if number alrdy there then move to nxt row
            sloveSudoku(board, row + 1, col);
        } else {
            for (int i = 1; i <= board.length; i++) {
                if (isSafe(board, row, col, i)) {
                    board[row][col] =(char) (i+'0');
                    sloveSudoku(board, row + 1, col);
                }
                board[row][col] = '.';
            }
        }

    }

    public static void main(String args[]) {
        char board[][]={{'5','3','.','.','7','.','.','.','.'},{'6','.','.','1','9','5','.','.','.'},{'.','9','8','.','.','.','.','6','.'},{'8','.','.','.','6','.','.','.','3'},{'4','.','.','8','.','3','.','.','1'},{'7','.','.','.','2','.','.','.','6'},{'.','6','.','.','.','.','2','8','.'},{'.','.','.','4','1','9','.','.','5'},{'.','.','.','.','8','.','.','7','9'}};
        sloveSudoku(board, 0, 0);
    }
}
